import java.io.IOException;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.Mapper;
import org.apache.hadoop.mapreduce.Reducer;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.input.TextInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;
import org.apache.hadoop.mapreduce.lib.output.TextOutputFormat;

public class AlphabetCount {
public static class MyMapper extends Mapper<LongWritable,Text,IntWritable,IntWritable>
{
	public void map(LongWritable key,Text value,Context context) throws InterruptedException, IOException
	{
		String line= value.toString();
		String[] parts= line.split("\\W");
		int b= parts.length;
		for(int i=0;i<b;i++)
		{
			int c= parts[i].length();
			int a=1;
			context.write(new IntWritable(c),new IntWritable(a));		
		}
	}
}
public static class MyReducer extends Reducer<IntWritable,IntWritable,IntWritable,IntWritable>
{
	public void reduce(IntWritable key,Iterable<IntWritable> values,Context context) throws IOException, InterruptedException
	{
		int sum=0;
		for(IntWritable value:values)
		{
			sum=sum+value.get();
		}
		context.write(key, new IntWritable(sum));
		
	}
}
	@SuppressWarnings("deprecation")
	public static void main(String[] args) throws IOException, ClassNotFoundException, InterruptedException {
		Configuration conf= new Configuration();
		Job job= new Job(conf,"Alphabet Count");
		job.setJarByClass(AlphabetCount.class);
		job.setMapperClass(MyMapper.class);
		job.setReducerClass(MyReducer.class);
		job.setCombinerClass(MyReducer.class);
		job.setMapOutputKeyClass(IntWritable.class);
		job.setMapOutputValueClass(IntWritable.class);
		job.setOutputKeyClass(IntWritable.class);
		job.setOutputValueClass(IntWritable.class);
		job.setInputFormatClass(TextInputFormat.class);
		job.setOutputFormatClass(TextOutputFormat.class);
		FileInputFormat.addInputPath(job,new Path(args[0]));
		FileOutputFormat.setOutputPath(job, new Path(args[1]));
		System.exit(job.waitForCompletion(true)?0:1);
		

	}

}
